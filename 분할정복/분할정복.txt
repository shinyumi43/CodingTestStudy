분할정복
base case : 직접 계산할 수 있음, 그냥 상태로 존재

배열을 분할해서 하나가 될 때까지 나눈 뒤에 나눈 것의 합을 도출
-> 전체의 합을 도출할 수 있음

배열을 분할해서 하나가 될 때까지 나눈 뒤에 나눈 집합의 정렬을 진행
-> 전체 배열의 정렬을 해낼 수 있음

투포인터
#include <algorithm>
sort(시작, 끝)

vector
sort(v.begin(), v.end);

array
sort(n, n+k);

부분배열의 합이 5가 되는 경우를 구하도록
1 2 3 4 2 3
M = 5
이중 for문으로 다 돌리면서 하는 경우가 있겠지만, 시간복잡도로 인해 투포인터를 사용

L이 왼쪽, R이 오른쪽 둘이 처음에는 첫 원소에 위치
합이 부족할 경우에, R을 올리도록
5를 넘어서는 경우, L을 움직이도록
L을 고정하고, 부분 배열이 M보다 작으면 R을 지속적으로 증가
부분 배열이 목표 합보다 커질 경우에 L에 대한 R값이 없으므로
L을 다음 경우의 수로 이동하도록 함
R을 초기화하지 않아도 되는 이유 - M보다 작으면 R을 이동, M보다 크면 L을 이동
2 * N의 시간복잡도를 갖게 되는 것
