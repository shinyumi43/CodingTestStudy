// 그리디 - 1 빼기
// 그때 그때 최선의 방법을 선택해서 가는 것

// 주어진 수에서 1을 빼고, 0으로 만들기 위해 얼마만큼 1을 제거해야 하는지를 도출

// 1을 지우는 연산을 수행하기 위해서는 수에 1이 있어야 함
// 수에 1이 있다면, 1을 지우고, 1이 없다면, 빼는 것이 최선의 방법
// 수에 1이 없으면, 항상 1을 빼는 것이 최선

// 자릿수가 줄어드는 방법은 10000..의 꼴

// 굳이 1을 지우지 않고, 일의 자리의 수만 관찰해도 됨

// 0 앞에 0 또는 1만 있다면, 연산이 필요 없음
// 0 앞에 2 이상의 수가 있다면, 9번의 연산이 필요

// 105 -> 1 + 0 + 5 = 5 + 1 (6회)
// 506 -> 5 + 0 + 6 = 6 + 9 + 5 (20회), 0을 9회로 취급, 0 앞에 2 이상의 수가 존재하므로

// 그리디 - 타이핑
// 그때 그때 최선의 방법을 선택해서 가는 것

// 마름모 - 대문자, X - 소문자, 초기에 비활성화
// 별 - 마지막 알파벳 대소문자 여부가 변경, 마지막 - 대/소문자 - 소/대문자로 변경
// 가능한 적은 횟수로 문자열을 입력하고자 함

// 알파벳 개수 만큼은 무조건 입력해야 함
// 현재 보고 있는 문자를 바로 입력할 수 있으면, 바로 입력하는 것이 좋음
// 바로 입력할 수 없으면, 어떻게든 마름모 또는 별 버튼을 입력해야 함

// 마름모 버튼은 입력하지 못하는 문자가 연속일 때, 효율적
// 별 버튼은 입력하지 못하는 문자가 별로 없을 때, 효율적

// 별 버튼은 iLo 처럼 현재 입력 중인 문자 사이에 입력하지 못하는 문자가 껴있을 때 사용
// 마름모 버튼은 INHA 처럼 입력하지 못하는 문자가 연속으로 붙어있을 때 사용

// 현재 문자랑 다음에 오는 문자만을 확인하면 됨

// 1. 현재 문자를 바로 입력할 수 있는 경우 입력함
// 2. 현재 문자와 다음 문자가 입력할 수 없는 문자일 경우, 마름모 버튼을 사용
// 3. 현재 문자만 입력할 수 있는 문자일 경우, 별 버튼을 활용

// 2개만 관찰해도 괜찮은 이유
// AA, Aa, 앞 소문자는 그냥 입력하면 됨

// 그리디 - 민겸 수
// 그때 그때 최선의 방법을 선택해서 가는 것

// 민겸 수, 0 이상의 수 N에 대해 10^N or 5*10^N의 십진수를 대문자 M과 K로 이루어진 문자열로 구성

// 알파벳의 수와 숫자의 길이는 항상 동일
// M으로 끝나는 수는 무조건 1로 시작
// K로 끝나는 수는 무조건 5로 시작

// 최댓값을 구하기 위해서 무조건 앞자리를 5로
// 최솟값을 구하기 위해서 무조건 앞자리를 1로

// M이 연속될 경우에는 10, 100으로 묶어서 고민
// K는 5로 바꾸도록